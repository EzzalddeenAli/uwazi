/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/search": {
    /**
     * Search entities 
     * @description Search entities
     */
    get: {
      /**
       * Search entities 
       * @description Search entities
       */
      parameters?: {
        query?: {
          page?: {
            limit?: number;
            offset?: number;
          };
          filter?: {
            searchString?: string;
            sharedId?: string;
            published?: boolean;
            [key: string]: ({
              from?: number;
              to?: number;
            } | ({
              values?: (string)[];
              /** @enum {string} */
              operator?: "AND" | "OR";
            }) | string | number | boolean) | undefined;
          };
          sort?: string;
          fields?: (string)[];
        };
      };
      responses: {
        /** @description A JSON array of entities */
        200: {
          content: {
            "application/json": {
              data?: (components["schemas"]["entity"])[];
            };
          };
        };
      };
    };
  };
  "/api/pages": {
    /**
     * Get pages 
     * @description Get pages
     */
    get: {
      /**
       * Get pages 
       * @description Get pages
       */
      parameters?: {
        query?: {
          sharedId?: string;
        };
          /** @example en */
          /**
           * @description The natural language and locale that the client prefers,
           *             will be used if no content-language is provided, in case none are provided.
           *             (api will asume default language configured) 
           * @example en
           */
        header?: {
          "Content-Language"?: string;
          "Accept-Language"?: string;
        };
      };
      responses: {
        /** @description Get an array of pages */
        200: {
          content: {
            "application/json": {
              data?: (components["schemas"]["page"])[];
            };
          };
        };
      };
    };
    /** Create or update a page */
    post: {
      /** Create or update a page */
      parameters?: {
          /** @example XMLHttpRequest */
          /** @example en */
          /**
           * @description The natural language and locale that the client prefers,
           *             will be used if no content-language is provided, in case none are provided.
           *             (api will asume default language configured) 
           * @example en
           */
        header?: {
          "X-Requested-With"?: string;
          "Content-Language"?: string;
          "Accept-Language"?: string;
        };
      };
      requestBody: {
        content: {
          /**
           * @example {
           *   "title": "test page",
           *   "metadata": {
           *     "content": "my page content"
           *   }
           * }
           */
          "application/json": components["schemas"]["page"];
        };
      };
      responses: {
        /** @description Will return the page created / updated */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["page"];
            };
          };
        };
      };
    };
    /** delete a page */
    delete: {
      /** delete a page */
      parameters: {
        query: {
          sharedId: string;
        };
          /** @example XMLHttpRequest */
          /** @example en */
          /**
           * @description The natural language and locale that the client prefers,
           *             will be used if no content-language is provided, in case none are provided.
           *             (api will asume default language configured) 
           * @example en
           */
        header?: {
          "X-Requested-With"?: string;
          "Content-Language"?: string;
          "Accept-Language"?: string;
        };
      };
      responses: {
        /** @description will return acknowledged deletion */
        200: {
          content: {
            "application/json": {
              acknowledged?: boolean;
              deletedCount?: number;
            };
          };
        };
      };
    };
  };
  "/api/page": {
    /**
     * Get a single page 
     * @description Get a single page
     */
    get: {
      /**
       * Get a single page 
       * @description Get a single page
       */
      parameters: {
        query: {
          sharedId: string;
          slug?: string;
        };
          /** @example en */
          /**
           * @description The natural language and locale that the client prefers,
           *             will be used if no content-language is provided, in case none are provided.
           *             (api will asume default language configured) 
           * @example en
           */
        header?: {
          "Content-Language"?: string;
          "Accept-Language"?: string;
        };
      };
      responses: {
        /** @description Get an array of pages */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["page"];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    entity: Record<string, never>;
    page: Record<string, never>;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
